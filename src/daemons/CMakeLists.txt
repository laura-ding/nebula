if (ENABLE_ONLY_SHARED)
    nebula_add_executable(
        NAME
            nebula-graphd
        SOURCES
            GraphDaemon.cpp
        LIBRARIES
            filter_lib
            graph_lib
            http_client_lib
            parser_lib
            network_lib
            process_lib
            graph_thrift_lib
            storage_client_lib
            storage_thrift_lib
            meta_client_lib
            stats_lib
            time_lib
            meta_thrift_lib
            common_thrift_lib
            thrift_lib
            schema_lib
            index_lib
            ws_lib
            ws_common_lib
            dataman_lib
            meta_gflags_man_lib
            gflags_man_lib
            stats_lib
            charset_lib
            thread_lib
            fs_lib
            base_lib
            concurrent_lib
            encryption_lib
            session_lib
            permission_lib
            kvstore_storage_utils_lib
            proxygenhttpserver
            proxygenlib
            ${THRIFT_LIBRARIES}
            wangle
    )


    nebula_add_executable(
        NAME
            nebula-storaged
        SOURCES
            StorageDaemon.cpp
        LIBRARIES
            filter_lib
            storage_server_lib
            storage_service_handler_lib
            storage_http_handler_lib
            kvstore_lib
            raftex_lib
            raftex_thrift_lib
            wal_lib
            dataman_lib
            schema_lib
            index_lib
            hdfs_helper_lib
            storage_thrift_lib
            http_client_lib
            storage_client_lib
            meta_client_lib
            stats_lib
            time_lib
            meta_thrift_lib
            common_thrift_lib
            thrift_lib
            meta_gflags_man_lib
            gflags_man_lib
            network_lib
            process_lib
            ws_lib
            ws_common_lib
            thread_lib
            fs_lib
            stats_lib
            base_lib
            kvstore_storage_utils_lib
            proxygenhttpserver
            proxygenlib
            ${ROCKSDB_LIBRARIES}
            ${THRIFT_LIBRARIES}
            wangle
    )


    nebula_add_executable(
        NAME
            nebula-metad
        SOURCES
            MetaDaemon.cpp
        LIBRARIES
            meta_service_handler_lib
            meta_http_handler_lib
            kvstore_lib
            schema_lib
            index_lib
            wal_lib
            hdfs_helper_lib
            http_client_lib
            storage_client_lib
            storage_thrift_lib
            meta_client_lib
            stats_lib
            time_lib
            meta_thrift_lib
            raftex_lib
            raftex_thrift_lib
            common_thrift_lib
            thrift_lib
            process_lib
            ws_lib
            ws_common_lib
            gflags_man_lib
            network_lib
            thread_lib
            stats_lib
            charset_lib
            fs_lib
            base_lib
            encryption_lib
            kvstore_storage_utils_lib
            proxygenhttpserver
            proxygenlib
            ${ROCKSDB_LIBRARIES}
            ${THRIFT_LIBRARIES}
            wangle
    )
else()
    nebula_add_executable(
            NAME
            nebula-graphd
            SOURCES
            GraphDaemon.cpp
            OBJECTS
            $<TARGET_OBJECTS:filter_obj>
            $<TARGET_OBJECTS:graph_obj>
            $<TARGET_OBJECTS:http_client_obj>
            $<TARGET_OBJECTS:parser_obj>
            $<TARGET_OBJECTS:network_obj>
            $<TARGET_OBJECTS:process_obj>
            $<TARGET_OBJECTS:graph_thrift_obj>
            $<TARGET_OBJECTS:storage_client_obj>
            $<TARGET_OBJECTS:storage_thrift_obj>
            $<TARGET_OBJECTS:meta_client_obj>
            $<TARGET_OBJECTS:stats_obj>
            $<TARGET_OBJECTS:time_obj>
            $<TARGET_OBJECTS:meta_thrift_obj>
            $<TARGET_OBJECTS:common_thrift_obj>
            $<TARGET_OBJECTS:thrift_obj>
            $<TARGET_OBJECTS:schema_obj>
            $<TARGET_OBJECTS:index_obj>
            $<TARGET_OBJECTS:ws_obj>
            $<TARGET_OBJECTS:ws_common_obj>
            $<TARGET_OBJECTS:dataman_obj>
            $<TARGET_OBJECTS:meta_gflags_man_obj>
            $<TARGET_OBJECTS:gflags_man_obj>
            $<TARGET_OBJECTS:stats_obj>
            $<TARGET_OBJECTS:charset_obj>
            $<TARGET_OBJECTS:thread_obj>
            $<TARGET_OBJECTS:fs_obj>
            $<TARGET_OBJECTS:base_obj>
            $<TARGET_OBJECTS:concurrent_obj>
            $<TARGET_OBJECTS:encryption_obj>
            $<TARGET_OBJECTS:session_obj>
            $<TARGET_OBJECTS:permission_obj>
            $<TARGET_OBJECTS:kvstore_storage_utils_obj>
            LIBRARIES
            proxygenhttpserver
            proxygenlib
            ${THRIFT_LIBRARIES}
            wangle
    )


    nebula_add_executable(
            NAME
            nebula-storaged
            SOURCES
            StorageDaemon.cpp
            OBJECTS
            $<TARGET_OBJECTS:filter_obj>
            $<TARGET_OBJECTS:storage_server_obj>
            $<TARGET_OBJECTS:storage_service_handler_obj>
            $<TARGET_OBJECTS:storage_http_handler_obj>
            $<TARGET_OBJECTS:kvstore_obj>
            $<TARGET_OBJECTS:raftex_obj>
            $<TARGET_OBJECTS:raftex_thrift_obj>
            $<TARGET_OBJECTS:wal_obj>
            $<TARGET_OBJECTS:dataman_obj>
            $<TARGET_OBJECTS:schema_obj>
            $<TARGET_OBJECTS:index_obj>
            $<TARGET_OBJECTS:hdfs_helper_obj>
            $<TARGET_OBJECTS:storage_thrift_obj>
            $<TARGET_OBJECTS:http_client_obj>
            $<TARGET_OBJECTS:storage_client_obj>
            $<TARGET_OBJECTS:meta_client_obj>
            $<TARGET_OBJECTS:stats_obj>
            $<TARGET_OBJECTS:time_obj>
            $<TARGET_OBJECTS:meta_thrift_obj>
            $<TARGET_OBJECTS:common_thrift_obj>
            $<TARGET_OBJECTS:thrift_obj>
            $<TARGET_OBJECTS:meta_gflags_man_obj>
            $<TARGET_OBJECTS:gflags_man_obj>
            $<TARGET_OBJECTS:network_obj>
            $<TARGET_OBJECTS:process_obj>
            $<TARGET_OBJECTS:ws_obj>
            $<TARGET_OBJECTS:ws_common_obj>
            $<TARGET_OBJECTS:thread_obj>
            $<TARGET_OBJECTS:fs_obj>
            $<TARGET_OBJECTS:stats_obj>
            $<TARGET_OBJECTS:base_obj>
            $<TARGET_OBJECTS:kvstore_storage_utils_obj>
            LIBRARIES
            proxygenhttpserver
            proxygenlib
            ${ROCKSDB_LIBRARIES}
            ${THRIFT_LIBRARIES}
            wangle
    )


    nebula_add_executable(
            NAME
            nebula-metad
            SOURCES
            MetaDaemon.cpp
            OBJECTS
            $<TARGET_OBJECTS:meta_service_handler_obj>
            $<TARGET_OBJECTS:meta_http_handler_obj>
            $<TARGET_OBJECTS:kvstore_obj>
            $<TARGET_OBJECTS:schema_obj>
            $<TARGET_OBJECTS:index_obj>
            $<TARGET_OBJECTS:wal_obj>
            $<TARGET_OBJECTS:hdfs_helper_obj>
            $<TARGET_OBJECTS:http_client_obj>
            $<TARGET_OBJECTS:storage_client_obj>
            $<TARGET_OBJECTS:storage_thrift_obj>
            $<TARGET_OBJECTS:meta_client_obj>
            $<TARGET_OBJECTS:stats_obj>
            $<TARGET_OBJECTS:time_obj>
            $<TARGET_OBJECTS:meta_thrift_obj>
            $<TARGET_OBJECTS:raftex_obj>
            $<TARGET_OBJECTS:raftex_thrift_obj>
            $<TARGET_OBJECTS:common_thrift_obj>
            $<TARGET_OBJECTS:thrift_obj>
            $<TARGET_OBJECTS:process_obj>
            $<TARGET_OBJECTS:ws_obj>
            $<TARGET_OBJECTS:ws_common_obj>
            $<TARGET_OBJECTS:gflags_man_obj>
            $<TARGET_OBJECTS:network_obj>
            $<TARGET_OBJECTS:thread_obj>
            $<TARGET_OBJECTS:stats_obj>
            $<TARGET_OBJECTS:charset_obj>
            $<TARGET_OBJECTS:fs_obj>
            $<TARGET_OBJECTS:base_obj>
            $<TARGET_OBJECTS:encryption_obj>
            $<TARGET_OBJECTS:kvstore_storage_utils_obj>
            LIBRARIES
            proxygenhttpserver
            proxygenlib
            ${ROCKSDB_LIBRARIES}
            ${THRIFT_LIBRARIES}
            wangle
    )
endif()

install(
    TARGETS
        nebula-graphd
    DESTINATION
        bin
    COMPONENT
        graph
)

install(
    TARGETS
        nebula-storaged
    DESTINATION
        bin
    COMPONENT
        storage
)

install(
    TARGETS
        nebula-metad
    DESTINATION
        bin
    COMPONENT
        meta
)
